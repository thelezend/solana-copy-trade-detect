name: Release

on:
    workflow_dispatch:
    push:
        paths:
            - "Cargo.toml"

jobs:
    check_version:
        runs-on: ubuntu-latest
        outputs:
            version_changed: ${{ steps.version_check.outputs.version_changed }}
            version: ${{ steps.version_check.outputs.version }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 2

            - name: Check if version changed
              id: version_check
              run: |
                  CURR_VERSION=$(grep '^version =' Cargo.toml | awk -F\" '{print $2}')
                  echo "Current version: $CURR_VERSION"
                  echo "version=$CURR_VERSION" >> $GITHUB_OUTPUT
                  if [ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]; then
                    echo "version_changed=true" >> $GITHUB_OUTPUT
                  else
                    PREV_VERSION=$(git show HEAD~1:Cargo.toml | grep '^version =' | awk -F\" '{print $2}')
                    echo "Previous version: $PREV_VERSION"
                    if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
                      echo "version_changed=true" >> $GITHUB_OUTPUT
                    else
                      echo "version_changed=false" >> $GITHUB_OUTPUT
                    fi
                  fi

    build:
        needs: check_version
        if: needs.check_version.outputs.version_changed == 'true'
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Build project
              run: cargo build --release

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: release-build-${{ matrix.os }}
                  path: |
                      target/release/solana-copy-trade-detect${{ matrix.os == 'windows-latest' && '.exe' || '' }}

    release:
        needs: [check_version, build]
        if: needs.check_version.outputs.version_changed == 'true'
        runs-on: ubuntu-latest
        steps:
            - name: Download Ubuntu build
              uses: actions/download-artifact@v4
              with:
                  name: release-build-ubuntu-latest
                  path: solana-copy-trade-detect-linux

            - name: Download Windows build
              uses: actions/download-artifact@v4
              with:
                  name: release-build-windows-latest
                  path: solana-copy-trade-detect-windows.exe

            - name: Download macOS build
              uses: actions/download-artifact@v4
              with:
                  name: release-build-macos-latest
                  path: solana-copy-trade-detect-macos

            - name: List files in the current directory
              run: ls -al

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: v${{ needs.check_version.outputs.version }}
                  files: |
                      solana-copy-trade-detect-linux
                      solana-copy-trade-detect-windows.exe
                      solana-copy-trade-detect-macos
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
